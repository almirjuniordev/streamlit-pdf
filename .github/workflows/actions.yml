name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - uses: hoverkraft-tech/compose-action@v2.0.1
      with:
        # Caminho para o seu arquivo docker-compose.yml (ajuste se necessário)
        compose-file: 'docker-compose.yml' 
        # Comando que você quer executar (neste caso, build)
        compose-command: 'build app'

    - name: Archive build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-artifacts
        path: .

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: build-artifacts

    - name: Copy files via SSH
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        password: ${{ secrets.SSH_PASS }}
        source: "."
        target: "/opt/streamlit-pdf"

    - name: Deploy and run container on remote server
      uses: appleboy/ssh-action@v0.1.7
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        password: ${{ secrets.SSH_PASS }}
        script: |
          cd /opt/streamlit-pdf
          docker-compose down  # Para garantir que o antigo contêiner seja removido
          docker-compose up -d postgres  # Garantir que o contêiner do banco de dados esteja rodando
          docker-compose up -d --no-deps --build app  # Recriar apenas o contêiner do aplicativo
          docker system prune -f  # Limpar contêineres, redes, imagens e caches não utilizados